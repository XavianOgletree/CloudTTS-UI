extends Reference

# This signal should be emitted whenever there is an error in using the API
signal error_occured(message)

var needs_url: bool setget , get_needs_url

# Returns true if this API needs a URL to function
# Some providers do not need a key, but instead generate a unique URL
func get_needs_url() -> bool:
	return true

#
# Given a HTTPRequest object, the api_key and the api_url, get_voices() returns 
# array that contains a series of dictionaries with following values:
#	{
#		name: String
#		metadata: Variant
#	}
# metadata can be in any structure as long as get_audio() can interpet it. This 
# function must yield on the HTTPRequest until the request is completed. See the
# following example:
#
#		# 1. make the request:
#			http.request(url)
#		
#		# 2. yield for the result
#			var response = yield($HTTPRequest, "request_completed")
#	
#		# 3. Process the result
#			var result: int = response[0]
#			var code: int = response[1]
#			var headers: PoolStringArray = response[2]
#			var body: PoolByteArray = response[3]
#		
#		# 4. Varify the result
#		if result == HTTPRequest.RESULT_SUCCESS and var code == 200:
#			# 5a. Process the results
#			...
#		else:
#			# 5b. Generate the an error message
#			emit_signal("error_occured", "You message goes here")
#
#	For more information on HTTPRequest objects, see the following links
#		- https://docs.godotengine.org/en/stable/tutorials/networking/http_request_class.html
#		- https://docs.godotengine.org/en/stable/classes/class_httprequest.html#class-httprequest
# 	
#	For more information on the signals and yielding, see the following links:
#		- https://docs.godotengine.org/en/stable/getting_started/scripting/gdscript/gdscript_basics.html#signals
#		- https://docs.godotengine.org/en/stable/getting_started/step_by_step/signals.html
#		- https://docs.godotengine.org/en/stable/getting_started/scripting/gdscript/gdscript_basics.html#coroutines-with-yield
#
func get_voices(
		http: HTTPRequest,
		api_key: String, 
		api_url: String) -> Array:
	return []
	

#
# Given a HTTPRequest object, the API key, the API URL, the text to TTS, 
# the voice metadata object, get_audio() will return a PoolByteArray that
# holds data in the MP3 format.
#
# This function must be able to process the metadata objects generated by
# get_voices(). Like get_voices(), this function must yield on the HTTPRequest
# until the request is completed. Please refer to the documentation of
# get_voices() for information about this process.
#
func get_audio(
		http: HTTPRequest,
		api_key: String, 
		api_url: String, 
		text: String, 
		voice_metadata: Object) -> PoolByteArray:
	return PoolByteArray([])
	

